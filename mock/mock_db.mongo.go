// Code generated by MockGen. DO NOT EDIT.
// Source: db.mongo.go

// Package mock_mongodbhelper is a generated GoMock package.
package mock_mongodbhelper

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMongoInterface is a mock of MongoInterface interface
type MockMongoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMongoInterfaceMockRecorder
}

// MockMongoInterfaceMockRecorder is the mock recorder for MockMongoInterface
type MockMongoInterfaceMockRecorder struct {
	mock *MockMongoInterface
}

// NewMockMongoInterface creates a new mock instance
func NewMockMongoInterface(ctrl *gomock.Controller) *MockMongoInterface {
	mock := &MockMongoInterface{ctrl: ctrl}
	mock.recorder = &MockMongoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMongoInterface) EXPECT() *MockMongoInterfaceMockRecorder {
	return m.recorder
}

// Connect mocks base method
func (m *MockMongoInterface) Connect(uri string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Connect", uri)
	ret0, _ := ret[0].(error)
	return ret0
}

// Connect indicates an expected call of Connect
func (mr *MockMongoInterfaceMockRecorder) Connect(uri interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Connect", reflect.TypeOf((*MockMongoInterface)(nil).Connect), uri)
}

// InsertElement mocks base method
func (m *MockMongoInterface) InsertElement(i interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertElement", i)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertElement indicates an expected call of InsertElement
func (mr *MockMongoInterfaceMockRecorder) InsertElement(i interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertElement", reflect.TypeOf((*MockMongoInterface)(nil).InsertElement), i)
}

// GetLatest mocks base method
func (m *MockMongoInterface) GetLatest() (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatest")
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatest indicates an expected call of GetLatest
func (mr *MockMongoInterfaceMockRecorder) GetLatest() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatest", reflect.TypeOf((*MockMongoInterface)(nil).GetLatest))
}

// GetLatestByKey mocks base method
func (m *MockMongoInterface) GetLatestByKey(key, value string, result interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestByKey", key, value, result)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetLatestByKey indicates an expected call of GetLatestByKey
func (mr *MockMongoInterfaceMockRecorder) GetLatestByKey(key, value, result interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestByKey", reflect.TypeOf((*MockMongoInterface)(nil).GetLatestByKey), key, value, result)
}
